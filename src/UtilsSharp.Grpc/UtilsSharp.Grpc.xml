<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UtilsSharp.Grpc</name>
    </assembly>
    <members>
        <member name="T:UtilsSharp.Grpc.ExportProtoType">
            <summary>
            导出Proto文件方式
            </summary>
        </member>
        <member name="F:UtilsSharp.Grpc.ExportProtoType.AllIn">
            <summary>
            全部在一个文件中
            </summary>
        </member>
        <member name="F:UtilsSharp.Grpc.ExportProtoType.TypeName">
            <summary>
            按类型名称创建文件
            </summary>
        </member>
        <member name="T:UtilsSharp.Grpc.ProtobufRunTime">
            <summary>
            根据程序集注册ProtoContract、ProtoInclude、ProtoMember
            </summary>
            <summary>
            根据程序集注册ProtoContract、ProtoInclude、ProtoMember
            </summary>
        </member>
        <member name="F:UtilsSharp.Grpc.ProtobufRunTime._dic">
            <summary>
            AllMarshallerFactory
            </summary>
        </member>
        <member name="P:UtilsSharp.Grpc.ProtobufRunTime.AllProtoJson">
            <summary>
            所有ProtoJson
            </summary>
        </member>
        <member name="P:UtilsSharp.Grpc.ProtobufRunTime.AllMarshallerFactory">
            <summary>
            AllMarshallerFactory
            </summary>
        </member>
        <member name="M:UtilsSharp.Grpc.ProtobufRunTime.Initialize">
            <summary>
            根据程序集注册ProtoContract、ProtoInclude、ProtoMember
            </summary>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Grpc.ProtobufRunTime.RegisterBaseType(ProtoBuf.Meta.RuntimeTypeModel,System.Collections.Generic.IDictionary{ProtoBuf.Meta.MetaType,System.Int32},System.Type,System.Type)">
            <summary>
            注册基类
            </summary>
            <param name="runtimeTypeModel">runtimeTypeModel</param>
            <param name="fieldsTag">fieldsTag</param>
            <param name="type">type</param>
            <param name="baseType">baseType</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Grpc.ProtobufRunTime.GetAllAssemblies">
            <summary>
            获取所有的程序集(含所有系统程序集、Nuget下载包)
            </summary>
            <returns>程序集集合</returns>
        </member>
        <member name="F:UtilsSharp.Grpc.ProtobufRunTime.ClientFactoryDic">
            <summary>
            ClientFactory 字典
            </summary>
        </member>
        <member name="F:UtilsSharp.Grpc.ProtobufRunTime.BinderConfigDic">
            <summary>
            BinderConfiguration 字典
            </summary>
        </member>
        <member name="F:UtilsSharp.Grpc.ProtobufRunTime.SchemaGenerator">
            <summary>
            proto脚本生成工具
            </summary>
        </member>
        <member name="M:UtilsSharp.Grpc.ProtobufRunTime.GetMarshallerFactory``1">
            <summary>
            GetMarshallerFactory
            </summary>
            <typeparam name="T">类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Grpc.ProtobufRunTime.GetMarshallerFactory(System.String)">
            <summary>
            GetMarshallerFactory
            </summary>
            <param name="assemblyName">程序集名称</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Grpc.ProtobufRunTime.GetMarshallerFactoryByKeyword(System.String)">
            <summary>
            GetMarshallerFactoryByKeyword
            </summary>
            <param name="assemblyNameKeyword">程序集名称关键词</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Grpc.ProtobufRunTime.GetClientFactory``1">
            <summary>
            GetClientFactory
            </summary>
            <typeparam name="T">类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Grpc.ProtobufRunTime.GetClientFactory(System.String)">
            <summary>
            GetClientFactory
            </summary>
            <param name="assemblyName">程序集名称</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Grpc.ProtobufRunTime.GetClientFactoryByKeyword(System.String)">
            <summary>
            GetClientFactoryByKeyword
            </summary>
            <param name="assemblyNameKeyword">程序集名称关键词</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Grpc.ProtobufRunTime.GenerateProtoFile``1">
            <summary>
            生成proto文件文本内容
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:UtilsSharp.Grpc.ProtobufRunTime.GenerateProtoFile(System.String,System.Collections.Generic.List{System.Type},System.String,UtilsSharp.Grpc.ExportProtoType)">
            <summary>
            生成proto文件文本内容
            </summary>
            <param name="assemblyNameKeyword">程序集名称关键词</param>
            <param name="types">types</param>
            <param name="exportDirPath">导出目录</param>
            <param name="exportProtoType">导出类型</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:UtilsSharp.Grpc.ProtobufConvert">
            <summary>
            序列化和反序列化
            </summary>
        </member>
        <member name="M:UtilsSharp.Grpc.ProtobufConvert.Serialize``1(``0,System.Text.Encoding)">
            <summary>
            序列化string类型
            </summary>
            <typeparam name="T">模型</typeparam>
            <param name="t">对象</param>
            <param name="encoding">编码</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Grpc.ProtobufConvert.SerializeByte``1(``0)">
            <summary>
            序列化 byte
            </summary>
            <typeparam name="T">模型</typeparam>
            <param name="t">对象</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Grpc.ProtobufConvert.DeSerialize``1(System.String,System.Text.Encoding)">
            <summary>
            反序列化 string
            </summary>
            <typeparam name="T">模型</typeparam>
            <param name="content">字符串</param>
            <param name="encoding">编码</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Grpc.ProtobufConvert.DeSerialize``1(System.Byte[])">
            <summary>
            反序列化 T
            </summary>
            <typeparam name="T">模型</typeparam>
            <param name="bytes">byte</param>
            <returns></returns>
        </member>
    </members>
</doc>
