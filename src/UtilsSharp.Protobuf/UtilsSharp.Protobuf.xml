<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UtilsSharp.Protobuf</name>
    </assembly>
    <members>
        <member name="T:UtilsSharp.Protobuf.ProtobufRunTime">
            <summary>
            根据程序集注册ProtoContract、ProtoInclude、ProtoMember
            </summary>
            <summary>
            根据程序集注册ProtoContract、ProtoInclude、ProtoMember
            </summary>
        </member>
        <member name="F:UtilsSharp.Protobuf.ProtobufRunTime._dic">
            <summary>
            AllMarshallerFactory
            </summary>
        </member>
        <member name="P:UtilsSharp.Protobuf.ProtobufRunTime.AllProtoJson">
            <summary>
            所有ProtoJson
            </summary>
        </member>
        <member name="P:UtilsSharp.Protobuf.ProtobufRunTime.AllMarshallerFactory">
            <summary>
            AllMarshallerFactory
            </summary>
        </member>
        <member name="M:UtilsSharp.Protobuf.ProtobufRunTime.Initialize">
            <summary>
            根据程序集注册ProtoContract、ProtoInclude、ProtoMember
            </summary>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Protobuf.ProtobufRunTime.RegisterBaseType(ProtoBuf.Meta.RuntimeTypeModel,System.Collections.Generic.IDictionary{ProtoBuf.Meta.MetaType,System.Int32},System.Type,System.Type)">
            <summary>
            注册基类
            </summary>
            <param name="runtimeTypeModel">runtimeTypeModel</param>
            <param name="fieldsTag">fieldsTag</param>
            <param name="type">type</param>
            <param name="baseType">baseType</param>
            <returns></returns>
        </member>
        <member name="F:UtilsSharp.Protobuf.ProtobufRunTime.ClientFactoryDic">
            <summary>
            ClientFactory 字典
            </summary>
        </member>
        <member name="M:UtilsSharp.Protobuf.ProtobufRunTime.GetMarshallerFactory``1">
            <summary>
            GetMarshallerFactory
            </summary>
            <typeparam name="T">类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Protobuf.ProtobufRunTime.GetMarshallerFactory(System.String)">
            <summary>
            GetMarshallerFactory
            </summary>
            <param name="assemblyName">程序集名称</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Protobuf.ProtobufRunTime.GetMarshallerFactoryByKeyword(System.String)">
            <summary>
            GetMarshallerFactoryByKeyword
            </summary>
            <param name="assemblyNameKeyword">程序集名称关键词</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Protobuf.ProtobufRunTime.GetClientFactory``1">
            <summary>
            GetClientFactory
            </summary>
            <typeparam name="T">类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Protobuf.ProtobufRunTime.GetClientFactory(System.String)">
            <summary>
            GetClientFactory
            </summary>
            <param name="assemblyName">程序集名称</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Protobuf.ProtobufRunTime.GetClientFactoryByKeyword(System.String)">
            <summary>
            GetClientFactoryByKeyword
            </summary>
            <param name="assemblyNameKeyword">程序集名称关键词</param>
            <returns></returns>
        </member>
        <member name="T:UtilsSharp.Protobuf.ProtobufRunTimeExtensions">
            <summary>
            注册ProtoContract、ProtoInclude、ProtoMember扩展
            </summary>
        </member>
        <member name="M:UtilsSharp.Protobuf.ProtobufRunTimeExtensions.AddProtobufRunTimeExtensions(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
            <summary>
             注册ProtoContract、ProtoInclude、ProtoMember
            </summary>
            <param name="services">services</param>
            <param name="assemblyNameKeyword">程序集名称关键词</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Protobuf.ProtobufRunTimeExtensions.AddProtobufRunTimeExtensions(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.List{ProtoBuf.Grpc.Configuration.MarshallerFactory})">
            <summary>
             注册ProtoContract、ProtoInclude、ProtoMember
            </summary>
            <param name="services">services</param>
            <param name="marshallerFactories">程序集名称关键词</param>
            <returns></returns>
        </member>
        <member name="T:UtilsSharp.Protobuf.ProtobufConvert">
            <summary>
            序列化和反序列化
            </summary>
        </member>
        <member name="M:UtilsSharp.Protobuf.ProtobufConvert.Serialize``1(``0,System.Text.Encoding)">
            <summary>
            序列化string类型
            </summary>
            <typeparam name="T">模型</typeparam>
            <param name="t">对象</param>
            <param name="encoding">编码</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Protobuf.ProtobufConvert.SerializeByte``1(``0)">
            <summary>
            序列化 byte
            </summary>
            <typeparam name="T">模型</typeparam>
            <param name="t">对象</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Protobuf.ProtobufConvert.DeSerialize``1(System.String,System.Text.Encoding)">
            <summary>
            反序列化 string
            </summary>
            <typeparam name="T">模型</typeparam>
            <param name="content">字符串</param>
            <param name="encoding">编码</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Protobuf.ProtobufConvert.DeSerialize``1(System.Byte[])">
            <summary>
            反序列化 T
            </summary>
            <typeparam name="T">模型</typeparam>
            <param name="bytes">byte</param>
            <returns></returns>
        </member>
    </members>
</doc>
