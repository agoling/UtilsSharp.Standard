<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UtilsSharp.Shared</name>
    </assembly>
    <members>
        <member name="T:UtilsSharp.Shared.Dependency.IDependency">
            <summary>
            DI依赖接口标识
            </summary>
        </member>
        <member name="T:UtilsSharp.Shared.Dependency.ISingletonDependency">
            <summary>
            表示实现者是一个单列依赖
            </summary>
        </member>
        <member name="T:UtilsSharp.Shared.Dependency.ITransientDependency">
            <summary>
            表示实现者是一个瞬态依赖
            </summary>
        </member>
        <member name="T:UtilsSharp.Shared.Dependency.IUnitOfWorkDependency">
            <summary>
            表示实现者是一个工作单元依赖
            </summary>
        </member>
        <member name="T:UtilsSharp.Shared.Entity.EnumEntity">
            <summary>
            枚举对象模型
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Entity.EnumEntity.EnumName">
            <summary>  
            枚举名称  
            </summary>  
        </member>
        <member name="P:UtilsSharp.Shared.Entity.EnumEntity.EnumValue">
            <summary>  
            枚举对象的值  
            </summary>  
        </member>
        <member name="P:UtilsSharp.Shared.Entity.EnumEntity.Description">
            <summary>  
            枚举的描述  
            </summary>  
        </member>
        <member name="T:UtilsSharp.Shared.Enum.关系运算符">
            <summary>
            关系运算符
            </summary>
        </member>
        <member name="F:UtilsSharp.Shared.Enum.关系运算符.大于">
            <summary>
            大于
            </summary>
        </member>
        <member name="F:UtilsSharp.Shared.Enum.关系运算符.大于等于">
            <summary>
            大于等于
            </summary>
        </member>
        <member name="F:UtilsSharp.Shared.Enum.关系运算符.等于">
            <summary>
            等于
            </summary>
        </member>
        <member name="F:UtilsSharp.Shared.Enum.关系运算符.不等于">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:UtilsSharp.Shared.Enum.关系运算符.小于等于">
            <summary>
            小于等于
            </summary>
        </member>
        <member name="F:UtilsSharp.Shared.Enum.关系运算符.小于">
            <summary>
            小于
            </summary>
        </member>
        <member name="T:UtilsSharp.Shared.Enum.算术运算符">
            <summary>
            算数运算符
            </summary>
        </member>
        <member name="F:UtilsSharp.Shared.Enum.算术运算符.加">
            <summary>
            加
            </summary>
        </member>
        <member name="F:UtilsSharp.Shared.Enum.算术运算符.减">
            <summary>
            减
            </summary>
        </member>
        <member name="F:UtilsSharp.Shared.Enum.算术运算符.乘">
            <summary>
            乘
            </summary>
        </member>
        <member name="F:UtilsSharp.Shared.Enum.算术运算符.除">
            <summary>
            除
            </summary>
        </member>
        <member name="F:UtilsSharp.Shared.Enum.算术运算符.求余">
            <summary>
            求余
            </summary>
        </member>
        <member name="T:UtilsSharp.Shared.Interface.ICacheManager">
            <summary>
            缓存管理接口
            </summary>
        </member>
        <member name="M:UtilsSharp.Shared.Interface.ICacheManager.GetCacheTypeName">
            <summary>
            获取当前缓存实例类型名字
            </summary>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Shared.Interface.ICacheManager.Set(System.String,System.Object,System.Int32)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存key</param>
            <param name="value">缓存数据</param>
            <param name="expireSeconds">缓存时间(秒)</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:UtilsSharp.Shared.Interface.ICacheManager.Set(System.String,System.Object,System.TimeSpan)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存key</param>
            <param name="value">缓存数据</param>
            <param name="expire">缓存时间戳</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:UtilsSharp.Shared.Interface.ICacheManager.Remove(System.String[])">
            <summary>
            移除缓存
            </summary>
            <param name="keys">缓存keys</param>
        </member>
        <member name="M:UtilsSharp.Shared.Interface.ICacheManager.IsExists(System.String)">
            <summary>
            验证缓存是否存在
            </summary>
            <param name="key">缓存key</param>
            <returns >是否存在</returns>
        </member>
        <member name="M:UtilsSharp.Shared.Interface.ICacheManager.Get(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns>缓存数据</returns>
        </member>
        <member name="M:UtilsSharp.Shared.Interface.ICacheManager.Get``1(System.String)">
            <summary>
            获取缓存
            </summary>
            <typeparam name="T">缓存数据类型</typeparam>
            <param name="key">缓存Key</param>
            <returns>缓存数据</returns>
        </member>
        <member name="T:UtilsSharp.Shared.Interface.IPagedList`1">
             <summary>
            列表分页接口
             </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Interface.IPagedList`1.PageIndex">
            <summary>
            当前页
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Interface.IPagedList`1.PageSize">
            <summary>
            每页显示条数
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Interface.IPagedList`1.TotalCount">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Interface.IPagedList`1.TotalPages">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Interface.IPagedList`1.HasPreviousPage">
            <summary>
            是否存在上一页
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Interface.IPagedList`1.HasNextPage">
            <summary>
            是否存在下一页
            </summary>
        </member>
        <member name="T:UtilsSharp.Shared.Interface.IProtobufEntity">
            <summary>
            ReSharper disable once CommentTypo
            Protobuf实体
            </summary>
        </member>
        <member name="T:UtilsSharp.Shared.Standard.BaseBackgroundWorker">
            <summary>
            BackgroundWorker后台操作基类
            </summary>
        </member>
        <member name="F:UtilsSharp.Shared.Standard.BaseBackgroundWorker.BgWorker">
            <summary>
            后台操作对象
            </summary>
        </member>
        <member name="F:UtilsSharp.Shared.Standard.BaseBackgroundWorker.ThreadName">
            <summary>
            线程名称
            </summary>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseBackgroundWorker.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="threadName">线程名称</param>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseBackgroundWorker.RunWorkerAsync">
            <summary>
            开始执行后台操作
            </summary>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseBackgroundWorker.RunWorkerAsync``1(``0)">
            <summary>
            开始执行后台操作
            </summary>
            <typeparam name="T">参数模型</typeparam>
            <param name="workerContext">参数</param>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseBackgroundWorker.ReportProgress(System.Int32)">
            <summary>
            报告进度引发ProgressChanged事件
            </summary>
            <param name="percentProgress">进度</param>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseBackgroundWorker.IsBusy">
            <summary>
            指示是否正在运行异步操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseBackgroundWorker.CancelAsync">
            <summary>
            取消挂起的后台操作
            </summary>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseBackgroundWorker.CancellationPending">
            <summary>
            指示应用程序是否已请求取消后台操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseBackgroundWorker.BgWorker_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            开始执行后台操作事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseBackgroundWorker.BgWorker_ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
            <summary>
            进度改变事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseBackgroundWorker.BgWorker_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
            执行完成后台操作事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseBackgroundWorker.BgWorker_Disposed(System.Object,System.EventArgs)">
            <summary>
            销毁后台操作事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:UtilsSharp.Shared.Standard.BaseMsg">
            <summary>
            提示信息模板
            </summary>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseMsg.ToMsgApiError(System.String)">
            <summary>
            2000|apiError|接口异常
            </summary>
            <param name="errorCode">错误码</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseMsg.ToMsgNetworkError(System.String)">
            <summary>
            3000|networkError|网络异常
            </summary>
            <param name="errorCode">错误码</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseMsg.ToMsgNotLogin(System.String)">
            <summary>
            4000|notLogin|未登录
            </summary>
            <param name="errorCode">错误码</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseMsg.ToMsgAuthExpire(System.String)">
            <summary>
            4010|authExpire|授权过期
            </summary>
            <param name="errorCode">错误码</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseMsg.ToMsgException(System.String)">
            <summary>
            5000|exception|TryCatch异常错误
            </summary>
            <param name="errorCode">错误码</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseMsg.ToMsgDataNotFound(System.String)">
            <summary>
            6000|dataNotFound|数据找不到
            </summary>
            <param name="errorCode">错误码</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseMsg.ToMsgDataNotValid(System.String)">
            <summary>
            6010|dataNotValid|数据验证不通过
            </summary>
            <param name="errorCode">错误码</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseMsg.ToMsgBusinessError(System.String)">
            <summary>
            7000|businessError|默认业务性异常
            </summary>
            <param name="errorCode">错误码</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseMsg.ToMsgParameterCannotBeEmpty(System.String)">
            <summary>
            7010|parameterCannotBeEmpty|参数不能为空
            </summary>
            <param name="errorCode">错误码</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseMsg.ToMsgInvalidParameter(System.String)">
            <summary>
            7020|invalidParameter|非法参数
            </summary>
            <param name="errorCode">错误码</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseMsg.ToMsgDbError(System.String)">
            <summary>
            8000|dbError|数据库异常
            </summary>
            <param name="errorCode">错误码</param>
            <returns></returns>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseMsg.ToMsgSystemError(System.String)">
            <summary>
            9000|SystemError|系统错误
            </summary>
            <param name="errorCode">错误码</param>
            <returns></returns>
        </member>
        <member name="T:UtilsSharp.Shared.Standard.BasePage">
            <summary>
            基础分页参数
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BasePage.PageIndex">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BasePage.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BasePage.Keyword">
            <summary>
            搜索关键字
            </summary>
        </member>
        <member name="T:UtilsSharp.Shared.Standard.BaseSortPage">
            <summary>
            基础分页参数(含排序参数)
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BaseSortPage.SortField">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BaseSortPage.SortType">
            <summary>
            排序类型：desc,asc
            </summary>
        </member>
        <member name="T:UtilsSharp.Shared.Standard.BaseResult`1">
            <summary>
            返回结果模型
            </summary>
            <typeparam name="T">自定义结果模型</typeparam>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BaseResult`1.Code">
             <summary>
             返回码|标识|说明
            <para>200|success|请求成功</para>
            999|defaultTips|业务提示
            <para>2000|apiError|接口异常</para>
            3000|networkError|网络异常
            <para>4000|notLogin|未登录</para>
            4010|authExpire|授权过期
            <para>5000|exception|TryCatch异常错误</para>
            6000|dataNotFound|数据找不到
            <para>6010|dataNotValid|数据验证不通过</para>
            7000|businessError|默认业务性错误
            <para>7010|parameterCannotBeEmpty|参数不能为空</para>
            7020|invalidParameter|非法参数
            <para>8000|dbError|数据库异常</para>
            9000|SystemError|系统错误
             </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BaseResult`1.Msg">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BaseResult`1.Result">
            <summary>
            返回对象结果
            </summary>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseResult`1.SetOk">
            <summary>
            执行成功
            </summary>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseResult`1.SetError(System.String)">
            <summary>
            设置错误提示
            </summary>
            <param name="msg">提示信息</param>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseResult`1.SetError(System.String,System.Int32)">
             <summary>
             设置错误提示
             </summary>
             <param name="msg">提示信息</param>
             <param name="code">
             返回码|标识|说明
            <para>200|success|请求成功</para>
            999|defaultTips|业务提示
            <para>2000|apiError|接口异常</para>
            3000|networkError|网络异常
            <para>4000|notLogin|未登录</para>
            4010|authExpire|授权过期
            <para>5000|exception|TryCatch异常错误</para>
            6000|dataNotFound|数据找不到
            <para>6010|dataNotValid|数据验证不通过</para>
            7000|businessError|默认业务性异常
            <para>8000|dbError|数据库异常</para>
            9000|SystemError|系统错误
             </param>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseResult`1.SetOk(System.String)">
            <summary>
            执行成功
            </summary>
            <param name="msg">成功提示信息</param>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseResult`1.SetOkResult(`0)">
            <summary>
            执行成功并返回结果
            </summary>
            <param name="result">返回对象结果</param>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BaseResult`1.SetOkResult(`0,System.String)">
            <summary>
            执行成功并返回结果
            </summary>
            <param name="result">返回对象结果</param>
            <param name="msg">成功提示信息</param>
        </member>
        <member name="T:UtilsSharp.Shared.Standard.BasePagedResult`1">
            <summary>
            返回分页结果模型
            </summary>
            <typeparam name="T">自定义结果模型</typeparam>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BasePagedResult`1.Code">
             <summary>
             返回码|标识|说明
            <para>200|success|请求成功</para>
            999|defaultTips|业务提示
            <para>2000|apiError|接口异常</para>
            3000|networkError|网络异常
            <para>4000|notLogin|未登录</para>
            4010|authExpire|授权过期
            <para>5000|exception|TryCatch异常错误</para>
            6000|dataNotFound|数据找不到
            <para>6010|dataNotValid|数据验证不通过</para>
            7000|businessError|默认业务性错误
            <para>7010|parameterCannotBeEmpty|参数不能为空</para>
            7020|invalidParameter|非法参数
            <para>8000|dbError|数据库异常</para>
            9000|SystemError|系统错误
             </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BasePagedResult`1.Msg">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BasePagedResult`1.Result">
            <summary>
            返回对象结果
            </summary>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BasePagedResult`1.SetError(System.String)">
            <summary>
            设置错误提示
            </summary>
            <param name="msg">提示信息</param>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BasePagedResult`1.SetError(System.String,System.Int32)">
             <summary>
             设置错误提示
             </summary>
             <param name="msg">提示信息</param>
             <param name="code">
             返回码|标识|说明
            <para>200|success|请求成功</para>
            999|defaultTips|业务提示
            <para>2000|apiError|接口异常</para>
            3000|networkError|网络异常
            <para>4000|notLogin|未登录</para>
            4010|authExpire|授权过期
            <para>5000|exception|TryCatch异常错误</para>
            6000|dataNotFound|数据找不到
            <para>6010|dataNotValid|数据验证不通过</para>
            7000|businessError|默认业务性异常
            <para>8000|dbError|数据库异常</para>
            9000|SystemError|系统错误
             </param>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BasePagedResult`1.SetOk(System.String)">
            <summary>
            执行成功
            </summary>
            <param name="msg">成功提示信息</param>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BasePagedResult`1.SetOkResult(UtilsSharp.Shared.Standard.BasePagedInfoResult{`0})">
            <summary>
            执行成功并返回结果
            </summary>
            <param name="result">返回对象结果</param>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.BasePagedResult`1.SetOkResult(UtilsSharp.Shared.Standard.BasePagedInfoResult{`0},System.String)">
            <summary>
            执行成功并返回结果
            </summary>
            <param name="result">返回对象结果</param>
            <param name="msg">成功提示信息</param>
        </member>
        <member name="T:UtilsSharp.Shared.Standard.BasePagedInfoResult`1">
            <summary>
            分页基础结果信息
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BasePagedInfoResult`1.PageIndex">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BasePagedInfoResult`1.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BasePagedInfoResult`1.TotalCount">
            <summary>
            总条数
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BasePagedInfoResult`1.TotalPages">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BasePagedInfoResult`1.OrderBy">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BasePagedInfoResult`1.HasPreviousPage">
            <summary>
            是否有上一页
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BasePagedInfoResult`1.HasNextPage">
            <summary>
            是否有下一页
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BasePagedInfoResult`1.List">
            <summary>
            结果信息
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BasePagedInfoResult`1.Params">
            <summary>
            参数信息
            </summary>
        </member>
        <member name="T:UtilsSharp.Shared.Standard.BaseStateCode">
            <summary>
            基础状态码
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BaseStateCode.请求成功">
            <summary>
            请求成功
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BaseStateCode.业务提示">
            <summary>
            业务提示
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BaseStateCode.接口异常">
            <summary>
            接口异常[2000~2999接口类异常]
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BaseStateCode.网络异常">
            <summary>
            网络异常[3000~3999网络类异常]
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BaseStateCode.未登录">
            <summary>
            未登录[4000~4999登入授权类异常]
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BaseStateCode.授权过期">
            <summary>
            授权过期[4000~4999登入授权类异常]
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BaseStateCode.TryCatch异常错误">
            <summary>
            TryCatch异常错误[5000~5999TryCatch类异常]
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BaseStateCode.数据找不到">
            <summary>
            数据找不到[6000~6999数据类异常]
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BaseStateCode.数据验证不通过">
            <summary>
            数据验证不通过[6000~6999数据类异常]
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BaseStateCode.默认业务性错误">
            <summary>
            默认业务性错误[7000~7999其他业务及参数类异常]
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BaseStateCode.参数不能为空">
            <summary>
            参数不能为空[7000~7999其他业务及参数类异常]
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BaseStateCode.非法参数">
            <summary>
            非法参数[7000~7999其他业务及参数类异常]
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BaseStateCode.数据库异常">
            <summary>
            数据库异常[8000~8999数据库类异常]
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.BaseStateCode.系统错误">
            <summary>
            系统错误
            </summary>
        </member>
        <member name="T:UtilsSharp.Shared.Standard.PagedList`1">
            <summary>
            列表分页
            </summary>
            <typeparam name="T">分页项类型</typeparam>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.PagedList`1.#ctor(System.Linq.IQueryable{`0},System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="source">数据源</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页显示条数</param>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.PagedList`1.#ctor(System.Collections.Generic.IList{`0},System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="source">数据源</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页显示条数</param>
        </member>
        <member name="M:UtilsSharp.Shared.Standard.PagedList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="source">数据源</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页显示条数</param>
            <param name="totalCount">总记录数</param>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.PagedList`1.PageIndex">
            <summary>
            当前页
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.PagedList`1.PageSize">
            <summary>
            每页显示条数
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.PagedList`1.TotalCount">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.PagedList`1.TotalPages">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.PagedList`1.HasPreviousPage">
            <summary>
            是否存在上一页
            </summary>
        </member>
        <member name="P:UtilsSharp.Shared.Standard.PagedList`1.HasNextPage">
            <summary>
            是否存在下一页
            </summary>
        </member>
    </members>
</doc>
